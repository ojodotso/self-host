tags:
  - name: Images
    description: Operations for generating, retrieving, and managing images.

paths:
  /v1/image/template:
    post:
      summary: Generate image from a template
      description: Creates an image by rendering a saved template with optional variable modifications.
      tags: [Images]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [templateId]
              properties:
                templateId:
                  type: string
                  description: ID of the template to use.
                modify:
                  type: object
                  additionalProperties:
                    type: string
                  description: Variables to override in the template.
                transparentBackground:
                  type: boolean
                  description: Whether to use a transparent background.
                viewportHeight:
                  type: integer
                  description: Viewport height for screenshot.
                  default: 800
                viewportWidth:
                  type: integer
                  description: Viewport width for screenshot.
                  default: 1280
      responses:
        "200":
          description: Image generated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        "422":
          description: Unprocessable Entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/image/html:
    post:
      summary: Generate image from raw HTML
      description: Creates an image directly from an HTML string sent in the request body.
      tags: [Images]
      requestBody:
        required: true
        content:
          text/html:
            schema:
              type: string
              example: '<html lang="en"><head><meta http-equiv="Content-Security-Policy" content="default-src ''none''; script-src ''unsafe-inline'' https:; style-src ''unsafe-inline'' https:; font-src https:; img-src ''self'' https: data:; connect-src ''none''; frame-src ''none''; object-src ''none''; base-uri ''none''; form-action ''none''; upgrade-insecure-requests"> <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&amp;display=swap" rel="stylesheet"> <script src="https://cdn.tailwindcss.com"></script> <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <style> body { font-family: "Inter", sans-serif; } .gradient-text { background: linear-gradient(90deg, #3b82f6, #8b5cf6); -webkit-background-clip: text; -webkit-text-fill-color: transparent; } .feature-card { transition: transform 0.3s; } .custom-gradient { background: linear-gradient(135deg, #4f46e5, #7c3aed, #db2777); } </style><style>*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/* ! tailwindcss v3.4.16 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''''}host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.pointer-events-none{pointer-events:none}.absolute{position:absolute}.relative{position:relative}.left-0{left:0px}.right-0{right:0px}.top-0{top:0px}.mb-2{margin-bottom:0.5rem}.mb-4{margin-bottom:1rem}.mb-8{margin-bottom:2rem}.mr-3{margin-right:0.75rem}.mr-8{margin-right:2rem}.mt-4{margin-top:1rem}.flex{display:flex}.grid{display:grid}.h-8{height:2rem}.h-\[4rem\]{height:4rem}.h-full{height:100%}.min-h-screen{min-height:100vh}.w-48{width:12rem}.w-8{width:2rem}.w-full{width:100%}.max-w-3xl{max-width:48rem}.list-inside{list-style-position:inside}.list-decimal{list-style-type:decimal}.grid-cols-3{grid-template-columns:repeat(3, minmax(0, 1fr))}.items-center{align-items:center}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.space-y-2 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0.5rem * var(--tw-space-y-reverse))}.rounded{border-radius:0.25rem}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:0.75rem}.bg-blue-50{--tw-bg-opacity:1;background-color:rgb(239 246 255 / var(--tw-bg-opacity, 1))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235 / var(--tw-bg-opacity, 1))}.bg-purple-50{--tw-bg-opacity:1;background-color:rgb(250 245 255 / var(--tw-bg-opacity, 1))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1))}.bg-opacity-95{--tw-bg-opacity:0.95}.bg-gradient-to-l{background-image:linear-gradient(to left, var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right, var(--tw-gradient-stops))}.from-blue-50{--tw-gradient-from:#eff6ff var(--tw-gradient-from-position);--tw-gradient-to:rgb(239 246 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-blue-50{--tw-gradient-to:rgb(239 246 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), #eff6ff var(--tw-gradient-via-position), var(--tw-gradient-to)}.to-transparent{--tw-gradient-to:transparent var(--tw-gradient-to-position)}.p-6{padding:1.5rem}.p-8{padding:2rem}.px-1{padding-left:0.25rem;padding-right:0.25rem}.text-center{text-align:center}.text-right{text-align:right}.text-2xl{font-size:1.5rem;line-height:2rem}.text-5xl{font-size:3rem;line-height:1}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.font-bold{font-weight:700}.font-semibold{font-weight:600}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246 / var(--tw-text-opacity, 1))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216 / var(--tw-text-opacity, 1))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.text-purple-500{--tw-text-opacity:1;color:rgb(168 85 247 / var(--tw-text-opacity, 1))}.text-purple-700{--tw-text-opacity:1;color:rgb(126 34 206 / var(--tw-text-opacity, 1))}.opacity-75{opacity:0.75}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgb(0 0 0 / 0.25);--tw-shadow-colored:0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.backdrop-blur-lg{--tw-backdrop-blur:blur(16px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}@media (min-width: 768px){.md\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}}</style></head><body class="custom-gradient min-h-screen flex items-center justify-center p-8"> <div class="bg-white bg-opacity-95 backdrop-blur-lg rounded-2xl shadow-2xl p-8 max-w-3xl w-full "> <div class="mb-8 text-center"> <h1 class="text-5xl font-bold mb-4">Welcome to <span class="gradient-text">oJo</span></h1> <p class="text-base text-gray-600">Convert HTML into stunning, dynamic images for social media, marketing &amp; more</p> </div> <div class="grid md:grid-cols-2 gap-6 mb-8"> <div class="feature-card bg-blue-50 rounded-xl p-6 shadow-md"> <div class="flex items-center mb-4"> <svg class="w-8 h-8 text-blue-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"> </path> </svg> <h2 class="text-xl font-semibold text-blue-700">Create Once, Use Forever</h2> </div> <p class="text-gray-600">Design your template with dynamic variables for infinite possibilities</p> </div> <div class="feature-card bg-purple-50 rounded-xl p-6 shadow-md"> <div class="flex items-center mb-4"> <svg class="w-8 h-8 text-purple-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3 3m0 0l-3-3m3 3V8"> </path> </svg> <h2 class="text-xl font-semibold text-purple-700">Lightning-Fast CDN </h2> </div> <p class="text-gray-600">Generated images automatically stored &amp; served via global CDN</p> </div> </div> <div class="mb-8 "> <h2 class="text-xl font-base mb-4 text-center">Try Our Weather Template</h2> <div class="feature-card bg-blue-50 rounded-xl p-6 shadow-md relative"> <div class="flex items-center justify-between"> <div> <h2 class="text-2xl font-semibold">San Francisco</h2> <p class="text-gray-500">Partly Cloudy</p> </div> <div class="text-right"> <div class="z-100"> <p class="text-2xl font-bold mr-8">22°C</p> </div> <div class="absolute h-[4rem] top-0 right-0 w-48 opacity-75"> <div class="absolute top-0 left-0 h-full w-8 bg-gradient-to-r from-blue-50 via-blue-50 to-transparent pointer-events-none"> </div> <canvas id="temperatureChart" width="192" height="64" style="display: block; box-sizing: border-box; height: 64px; width: 192px;"></canvas> <div class="absolute top-0 right-0 h-full w-8 bg-gradient-to-l from-blue-50 via-blue-50 to-transparent pointer-events-none"> </div> </div> </div> </div> <div class="mt-4 grid grid-cols-3 gap-4 text-center"> <div> <p class="text-gray-500">Humidity</p> <p class="font-semibold">65%</p> </div> <div> <p class="text-gray-500">Wind</p> <p class="font-semibold">12 km/h</p> </div> <div> <p class="text-gray-500">UV Index</p> <p class="font-semibold">6</p> </div> </div> </div> </div> <div class="bg-gray-100 rounded-xl p-6"> <h3 class="text-lg font-semibold mb-2">How It Works</h3> <ol class="list-decimal list-inside space-y-2 text-gray-700"> <li>Design your template with HTML, CSS, and dynamic variables</li> <li>Use variables like <code class="bg-gray-200 px-1 rounded">San Francisco</code> for dynamic content</li> <li>Call our API with different values to generate unique images</li> <li>Images are automatically stored and served via our global CDN</li> </ol> </div> </div> <script> const ctx = document.getElementById(''temperatureChart'').getContext(''2d''); new Chart(ctx, { type: ''line'', data: { labels: [''12 AM'', ''1 AM'', ''2 AM'', ''3 AM'', ''4 AM'', ''5 AM'', ''6 AM'', ''7 AM'', ''8 AM'', ''9 AM'', ''10 AM'', ''11 AM'', ''12 PM'', ''1 PM'', ''2 PM'', ''3 PM'', ''4 PM'', ''5 PM'', ''6 PM'', ''7 PM'', ''8 PM'', ''9 PM'', ''10 PM'', ''11 PM'' ], datasets: [{ label: ''Temperature (°C)'', data: [14,13,13,12,16,13,14,16,15,17,18,18,17,21,20,19,21,20,19,18,17,16,15,14], fill: false, tension: 0.4, pointRadius: 0, pointHoverRadius: 0 }] }, options: { responsive: true, maintainAspectRatio: false, plugins: { legend: { display: false }, tooltip: { enabled: false } }, scales: { x: { display: false, }, y: { display: false, } } } }); </script></body></html>'
      parameters:
        - in: header
          name: ojo-screenshot-transparent-background
          schema:
            type: boolean
          description: Use a transparent background.
        - in: header
          name: ojo-screenshot-viewport-width
          schema:
            type: integer
            default: 1280
          description: Viewport width for the screenshot.
        - in: header
          name: ojo-screenshot-viewport-height
          schema:
            type: integer
            default: 800
          description: Viewport height for the screenshot.
      responses:
        "200":
          description: Image generated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        "422":
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/image/{imageId}:
    get:
      summary: Retrieve an image
      description: Fetches a previously generated image by its public ID.
      tags: [Images]
      parameters:
        - in: path
          name: imageId
          required: true
          schema:
            type: string
          description: The public ID of the image to retrieve.
      responses:
        "200":
          description: The requested image.
          content:
            image/png: {}
            image/jpeg: {}
            image/webp: {}
        "404":
          description: Image not found.

  /v1/image/transform/{options}/{sourceUrl}:
    get:
      summary: Transform an image
      description: Fetches an image from a source URL and applies various transformations.
      tags: [Images]
      parameters:
        - in: path
          name: options
          required: true
          schema:
            type: string
            example: "bri-10,con-15,sat-20,hue-40,sharpen-true,gray-true"
          description: A comma-separated list of transformation options (e.g., w-width, h-height, fit-cover, q-quality).
        - in: path
          name: sourceUrl
          required: true
          schema:
            type: string
            format: uri
            example: https://images.pexels.com/photos/32022970/pexels-photo-32022970.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load
          description: The fully qualified and encoded URL of the source image to transform.
      responses:
        "200":
          description: The transformed image.
          content:
            image/jpeg: {}
            image/png: {}
            image/webp: {}
            image/avif: {}
        "400":
          description: Bad request due to invalid options or URL.

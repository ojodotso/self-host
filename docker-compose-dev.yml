services:
  server:
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      target: production
    restart: always
    depends_on:
      - postgres
      - browser
    env_file:
      - ./apps/server/.env.development
    environment:
      PORT: 3011
      DATABASE_URL: postgres://admin:password@postgres:5432/ojo-db
      BROWSER_ENDPOINTS: ws://browser:53444/playwright
    ports:
      - 3011:3011
    networks:
      - server_internal

  browser:
    build:
      context: .
      dockerfile: ./apps/browser/Dockerfile
      target: production
    restart: always
    environment:
      BROWSER_PORT: 53444
      BROWSER_CHANNEL: 'chrome'
    ports:
      - 53444:53444
    networks:
      - server_internal
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:53444/playwright']
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ojo-db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata

    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d ojo-db']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - server_internal

volumes:
  postgres_data:

networks:
  server_internal:
